"use strict";(self.webpackChunkfishbone=self.webpackChunkfishbone||[]).push([[4601],{8145:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"sequences","title":"Sequences (DLT logs based)","description":"Introduction","source":"@site/docs/sequences.mdx","sourceDirName":".","slug":"/sequences","permalink":"/fishbone/docs/sequences","draft":false,"unlisted":false,"editUrl":"https://github.com/mbehr1/fishbone/edit/master/docs/fishbone/docs/sequences.mdx","tags":[],"version":"current","frontMatter":{"id":"sequences","title":"Sequences (DLT logs based)","sidebar_label":"Sequences"},"sidebar":"fishboneSideBar","previous":{"title":"Nested fishbones","permalink":"/fishbone/docs/nestedFishbones"}}');var i=s(4848),r=s(8453),a=(s(6540),s(1021));const d={tableOfContentsInline:"tableOfContentsInline_prmo"};function l(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:t}=e;return(0,i.jsx)("div",{className:d.tableOfContentsInline,children:(0,i.jsx)(a.A,{toc:n,minHeadingLevel:s,maxHeadingLevel:t,className:"table-of-contents",linkClassName:null})})}const c={id:"sequences",title:"Sequences (DLT logs based)",sidebar_label:"Sequences"},o="Sequence detection (DLT logs based)",h={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Target",id:"target",level:2},{value:"Sequence definition",id:"sequence-definition",level:2},{value:"sequence attributes",id:"sequence-attributes",level:3},{value:"<code>step</code> definition",id:"step-definition",level:3},{value:"<code>failures</code> definition",id:"failures-definition",level:3},{value:"failure capturing data",id:"failure-capturing-data",level:4},{value:"<code>kpi</code> definition",id:"kpi-definition",level:3},{value:"example",id:"example",level:3},{value:"example alt(ernative) steps",id:"example-alternative-steps",level:3},{value:"context",id:"context",level:3},{value:"REST query sequence return values",id:"rest-query-sequence-return-values",level:2},{value:"Using sequences",id:"using-sequences",level:2},{value:"full report via dlt-logs extension",id:"full-report-via-dlt-logs-extension",level:3},{value:"full report via fba-cli tool",id:"full-report-via-fba-cli-tool",level:3},{value:"Testing sequence definitions",id:"testing-sequence-definitions",level:2},{value:"FAQs",id:"faqs",level:2},{value:"Q: What does <code>ERROR: Step out of order</code> mean?",id:"q-what-does-error-step-out-of-order-mean",level:4},{value:"Q: How to ensure that a step does not create a new sequence occurrence?",id:"q-how-to-ensure-that-a-step-does-not-create-a-new-sequence-occurrence",level:4},{value:"Q: How to escape chars in regex?",id:"q-how-to-escape-chars-in-regex",level:4},{value:"Q: What does <code>step#x exceeded max cardinality 1</code> mean?",id:"q-what-does-stepx-exceeded-max-cardinality-1-mean",level:4}];function f(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"sequence-detection-dlt-logs-based",children:"Sequence detection (DLT logs based)"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["In software engineering ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Sequence_diagram",children:"sequence diagrams"})," are often used to describe events occurring for a specific use-case. For those events the order of occurrence from start of the use-case to the end or error cases are defined."]}),"\n",(0,i.jsx)(n.p,{children:"In the context of log analysis, a sequence typically refers to a series of related log entries that represent a specific event coming from the flow of code executed."}),"\n",(0,i.jsx)(n.p,{children:"Sequences are often used in log analysis to:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Track the execution flow: By following a sequence of log entries, you can understand how a particular process or operation is executed within the system."}),"\n",(0,i.jsx)(n.li,{children:"Identify patterns: Sequences can help identify common patterns or behaviors in the system, which can be useful for performance optimization or troubleshooting."}),"\n",(0,i.jsx)(n.li,{children:"Detect anomalies: By comparing sequences, you can detect deviations from the expected behavior, which may indicate potential issues or errors in the system."}),"\n",(0,i.jsx)(n.li,{children:"Correlate events: Sequences can help correlate events across different components or services, providing a holistic view of the system's behavior."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"target",children:"Target"}),"\n",(0,i.jsx)(n.p,{children:"The target of sequence detection is to identify sequences for use-cases from the event logs."}),"\n",(0,i.jsx)(n.p,{children:"This eases the log based analysis for"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"faster understanding where a specific use-case failed,"}),"\n",(0,i.jsx)(n.li,{children:"confirming that the use-cases executed properly."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"sequence-definition",children:"Sequence definition"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://mbehr1.github.io/dlt-logs/",children:"dlt-logs"}),", ",(0,i.jsx)(n.a,{href:"https://github.com/mbehr1/fba-cli",children:"fba-cli"})," and fishbone extensions support ",(0,i.jsx)(n.a,{href:"/docs/badges#manual-edit-of-dlt-query",children:"REST query"})," based sequence definition."]}),"\n",(0,i.jsx)(n.h3,{id:"sequence-attributes",children:"sequence attributes"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"sequence"})," is defined via the following attributes:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"attribute"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:"Name of the sequence. Should be well defined as all sequences share the same namespace and the DLT-logs extension shows the results in the tree view under Events/Sequences/name."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"steps"})}),(0,i.jsxs)(n.td,{children:["Array with objects defining the events aka steps. Those steps are checked for being executed in order. See ",(0,i.jsx)(n.a,{href:"#step-definition",children:"step definition"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"failures"})}),(0,i.jsxs)(n.td,{children:["Object/map with filters defining a possible failure for the sequence. The object key defines the name of the failure and the key value defines the filter used to detect that. See ",(0,i.jsx)(n.a,{href:"#failures-definition",children:"failures definition"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"globalFilters"})}),(0,i.jsxs)(n.td,{children:["Optional array with filters that are applied first. Main intention is to use neg. filters here to filter for attributes.ecu or attributes.lifecycles.id. ",(0,i.jsx)(n.code,{children:"{type: 1, not: true, ecu: ${attributes.ecu}}"})," or ",(0,i.jsx)(n.code,{children:"{type: 1, not: true, lifecycles: ${attributes.lifecycles.id}}"})," This allows to apply the filters ECU/lifecycles for fishbones."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"kpis"})}),(0,i.jsxs)(n.td,{children:["Optional array with KPI definitions that are evaluated per occurrence. See ",(0,i.jsx)(n.a,{href:"#kpi-definition",children:"KPI definition"})," for details."]})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"An example with one failure but without step details :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{4,5,7}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "steps":[ // array with one object per step...\n    ],\n    "failures":{\n      "crash":{ // a dlt filter definition like:\n        "type":3, // event\n        "apid":"SYS",\n        "ctid":"JOUR",\n        "payloadRegex":"^process \'.*?\' crashed"\n      }\n    }\n  }\n]\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"step-definition",children:[(0,i.jsx)(n.code,{children:"step"})," definition"]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"step"})," has the following attributes:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"attribute"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsx)(n.td,{children:"Optional: Name of this step. If not provided name of the filter or name of the contained sequence will be used."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"card"})}),(0,i.jsxs)(n.td,{children:['Optional: Cardinality of this step. Defaults to "exactly once/mandatory step" if not provided. Can be any of:',(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"?"}),":zero"," or once, so an optional step,",(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"*"}),":any"," number of times = 0.., so an optional step that can occur not at all or any number of times",(0,i.jsx)("br",{}),(0,i.jsx)(n.code,{children:"+"}),":once"," or multiple times, so a mandatory step that can occur multiple times but at least once"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"canCreateNew"})}),(0,i.jsxs)(n.td,{children:["Optional: Determines whether this step can create a new sequence occurrence. Defaults to ",(0,i.jsx)(n.code,{children:"true"}),". Must not be ",(0,i.jsx)(n.code,{children:"false"})," for the first step in a sequence. Set to ",(0,i.jsx)(n.code,{children:"false"})," if this step shall only be checked for a created occurrence from an earlier step. So the ",(0,i.jsx)(n.code,{children:"filter"}),", ",(0,i.jsx)(n.code,{children:"sequence"}),", ",(0,i.jsx)(n.code,{children:"alt"})," or ",(0,i.jsx)(n.code,{children:"par"})," will be ignored then."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ignoreOutOfOrder"})}),(0,i.jsxs)(n.td,{children:["Optional: if true, any matches/occurrences of this step that are out of order/sequence are ignored. Can only be used if the step before this step is mandatory. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),". This can be used if some messages occur often but you expect it exactly after one step and you do ignore any other occurrences."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"filter"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"https://mbehr1.github.io/dlt-logs/docs/filterReference#details",children:"DLT filter"}),' definition. If this filter matches a msg the step is seen as "matching". Either ',(0,i.jsx)(n.code,{children:"filter"}),", ",(0,i.jsx)(n.code,{children:"sequence"}),", ",(0,i.jsx)(n.code,{children:"alt"})," or ",(0,i.jsx)(n.code,{children:"par"})," must be provided."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"sequence"})}),(0,i.jsxs)(n.td,{children:["A definition of a ",(0,i.jsx)(n.code,{children:"sub-sequence"}),". For this step a full sequence is used. This is useful to either break down a bigger sequence into smaller parts or if this step can be executed multiple times (e.g. with ",(0,i.jsx)(n.code,{children:"card:*"}),") but consists of multiple events/steps. See ",(0,i.jsx)(n.a,{href:"#example",children:"example"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"alt"})}),(0,i.jsxs)(n.td,{children:["A definition for a list of alternative steps. The ",(0,i.jsx)(n.code,{children:"alt"})," attribute is an array/list of step definitions. Any ",(0,i.jsx)(n.code,{children:"card"})," or ",(0,i.jsx)(n.code,{children:"canCreateNew"})," attribute will automatically be applied to the alternative steps. For this step to be ",(0,i.jsx)(n.code,{children:"ok"})," exactly one step needs to be ",(0,i.jsx)(n.code,{children:"ok"}),". See ",(0,i.jsx)(n.a,{href:"#example-alternative-steps",children:"example alt"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"par"})}),(0,i.jsxs)(n.td,{children:["A definition for a list of parallel steps. The ",(0,i.jsx)(n.code,{children:"par"})," attribute is an array/list of step definitions. Single steps can have their own ",(0,i.jsx)(n.code,{children:"card"})," or ",(0,i.jsx)(n.code,{children:"canCreateNew"})," attribute and the step with ",(0,i.jsx)(n.code,{children:"par"})," as well. For this step to be ",(0,i.jsx)(n.code,{children:"ok"})," all mandatory steps ( ",(0,i.jsx)(n.code,{children:"card"})," not ",(0,i.jsx)(n.code,{children:"?,*"})," ) need to be ",(0,i.jsx)(n.code,{children:"ok"}),". The order in which the parallel steps are fulfilled doesn't matter."]})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"important",children:(0,i.jsx)(n.p,{children:"A step must contain either a filter or a sub-sequence or an alt-list but not more than one!"})}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsx)(n.p,{children:"Optional steps are not allowed at the end of the sequence / end of the steps list."}),(0,i.jsxs)(n.p,{children:["The sequence will be detected with the last mandatory step as ",(0,i.jsx)(n.code,{children:"done"})," so the optional steps at the end would never be matched."]})]}),"\n",(0,i.jsxs)(n.h3,{id:"failures-definition",children:[(0,i.jsx)(n.code,{children:"failures"})," definition"]}),"\n",(0,i.jsx)(n.p,{children:"The failures attribute consists of a name/filter mapping like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{2,6}",children:'{\n  "error1": { // DLT filter definition for \'error1\'\n    "type":3,\n    // more dlt filter attributes like apid, ctid, payloadRegex\n  },\n  "error2": { // DLT filter definition for \'error2\' \n    "type":3,\n    // more dlt filter attributes...\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Each failures object members is a ",(0,i.jsx)(n.a,{href:"https://mbehr1.github.io/dlt-logs/docs/filterReference#details",children:"DLT filter"})," object.\nIf this filter matches a log message the sequences is aborted with the failure name from the object key."]}),"\n",(0,i.jsx)(n.p,{children:"E.g. for"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{7,8}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "steps":[ // one object per step...\n    ],\n    "failures":{\n      "crash":{ // a dlt filter definition like:\n        "type":3, // event\n        "apid":"SYS",\n        "ctid":"JOUR",\n        "payloadRegex":"^process \'.*?\' crashed"\n      }\n    }\n  }\n]\n'})}),"\n",(0,i.jsxs)(n.p,{children:["the sequence ",(0,i.jsx)(n.code,{children:"SW Update"})," will fail with error ",(0,i.jsx)(n.code,{children:"crash"})," if a log message from ",(0,i.jsx)(n.code,{children:"SYS/JOUR"})," starting with payload \"process '...' crashed\" occurs."]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Only a started sequence gets aborted with any of the defined failures. If the failures occur without a started sequence they are ignored."})}),"\n",(0,i.jsx)(n.h4,{id:"failure-capturing-data",children:"failure capturing data"}),"\n",(0,i.jsxs)(n.p,{children:["Failure filters can capture data similar to ",(0,i.jsx)(n.a,{href:"#context",children:"context"}),":"]}),"\n",(0,i.jsx)(n.p,{children:"E.g. for"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{7,8,12}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "steps":[ // one object per step...\n    ],\n    "failures":{\n      "crash":{ // a dlt filter definition like:\n        "type":3, // event\n        "apid":"SYS",\n        "ctid":"JOUR",\n        "payloadRegex":"^process \'(?<crash_process>.*?)\' crashed with signal (?<crash_signal>.*)"\n      }\n    }\n  }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"A message like"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"SYS JOUR process 'foo' crashed with signal 6\n"})}),"\n",(0,i.jsx)(n.p,{children:"will lead to a failure"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'crash: "crash_process":"foo", "crash_signal": "6"'})}),"\n",(0,i.jsxs)(n.p,{children:["and ",(0,i.jsx)(n.code,{children:"crash_process"})," and ",(0,i.jsx)(n.code,{children:"crash_signal"})," are added to the ",(0,i.jsx)(n.a,{href:"#context",children:"context"})," as well."]}),"\n",(0,i.jsxs)(n.h3,{id:"kpi-definition",children:[(0,i.jsx)(n.code,{children:"kpi"})," definition"]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"kpi"})," has the following attributes:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"attribute"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"name"})}),(0,i.jsxs)(n.td,{children:["Name of this ",(0,i.jsx)(n.code,{children:"kpi"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"duration"})}),(0,i.jsxs)(n.td,{children:["Optional object for ",(0,i.jsx)(n.code,{children:"duration"})," KPIs. Those KPIs measure a time distance/duration."]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Later on other kpi types than ",(0,i.jsx)(n.code,{children:"duration"})," will be defined. That's why ",(0,i.jsx)(n.code,{children:"duration"})," is optional. Currently it's the only supported type so it needs to be defined."]}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"duration"})," has the following attributes:"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"attribute"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"start"})}),(0,i.jsxs)(n.td,{children:["Optional start marker. If not provided the timestamp from the ",(0,i.jsx)(n.code,{children:"end"})," marker is used."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"end"})}),(0,i.jsxs)(n.td,{children:["string expression to use as the ",(0,i.jsx)(n.code,{children:"end"})," of the duration."]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"start"})," and ",(0,i.jsx)(n.code,{children:"end"})," can be specified with the following syntax:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"start(s#<stepnr>)"}),": defines the start event time of the sequence step with the specified nr.\n",(0,i.jsx)(n.code,{children:"end(s#<stepnr>)"}),": defines the end event time of the sequence step with the specified nr."]}),"\n",(0,i.jsxs)(n.p,{children:["E.g. the following definition defines a KPI named ",(0,i.jsx)(n.code,{children:"flash duration"})," that measures the duration from start of step #1 to end of step#3."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{5,6,7,8,9,10,11,12,13}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "kpis":[\n      {\n        "name": "flash duration",\n        "duration": {\n          "start": "start(s#1)",\n          "end": "end(s#3)"\n        }\n      }\n    ],\n    "steps":[ // one object per step...\n    ],\n    "failures":{\n    }\n  }\n]\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"end(s#...)"})," is for ",(0,i.jsx)(n.code,{children:"filter"})," based steps the same as ",(0,i.jsx)(n.code,{children:"start(s#...)"}),". But if the step is e.g. a sub-sequence or a parallel step the end is the last event/msg for that step."]}),(0,i.jsxs)(n.p,{children:["So it's good practice to use ",(0,i.jsx)(n.code,{children:"end(...)"})," instead of ",(0,i.jsx)(n.code,{children:"start(...)"})," for the ",(0,i.jsx)(n.code,{children:"duration.end"}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"example"}),"\n",(0,i.jsx)(n.p,{children:"See here an example for a very basic flash sequence consisting of:"}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    autoNumber\n    actor tester\n    participant flash\n    tester->>+flash: start of flash\n\n    loop flash of a single image\n      tester->>flash: start image transfer\n      Note over tester, flash: transfer image data and persist\n      flash->>tester: end image transfer\n    end\n    \n    flash->>-tester: end of flash"}),"\n",(0,i.jsx)(n.p,{children:"Filters/failures are ommited."}),"\n",(0,i.jsxs)(n.p,{children:["Here ",(0,i.jsx)(n.code,{children:"sub-sequences"})," are used to ensure that if image x is flashed it's mandatory to have a start and end of the transfer."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{7,11,12,13,16,20,28}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "steps":[\n      { // step 1 mandatory:\n        "name":"start of flash",\n        "filter":// filter to detect flash sequence start\n      },\n      { // step 2 multiple times \n        "card":"+", // multiple but at least 1 image needs to be flashed\n        "sequence":[\n          "name": "flash of image",\n          "steps":[\n            { // sub-step 2.1\n              "name":"transfer start",\n              "filter":// filter to detect start of transfer\n            },\n            { // sub-step 2.2 = 3\n              "name":"transfer end",\n              "filter":// filter to detect start of transfer\n            }\n          ],\n          "failures":{}\n        ]\n      },\n      { // step 3 (=4 in seq chart)\n        "name":"end of flash",\n        "filter":// filter to detect end of flash sequence\n      },\n    ],\n    "failures:{} // ommitted here\n    ,\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-alternative-steps",children:"example alt(ernative) steps"}),"\n",(0,i.jsxs)(n.p,{children:["See here an example for the ",(0,i.jsx)(n.code,{children:"alt"})," attribute of a step:"]}),"\n",(0,i.jsx)(n.mermaid,{value:"sequenceDiagram\n    autoNumber\n    actor tester\n    participant flash\n    alt\n    tester->>+flash: flash new SW if new SW is newer\n    else\n    tester->>+flash: skip flash if new SW is the same\n    else\n    tester->>+flash: reject flash if new SW is older\n    end"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",metastring:"{8,10,14,18,21}",children:'/get/docs/0/filters?\nsequences=[\n  {\n    "name": "SW Update",\n    "steps":[\n      { // this step is an alternative step with 3 alternatives:\n        "name":"flash",\n        "alt":[\n            { // alt step 1\n              "name":"flash new SW if new SW is newer",\n              "sequence":// e.g. sub-sequence to detect if flash was started with newer SW\n            },\n            { // alt-step 2\n              "name":"skip flash if new SW is the same",\n              "filter":// filter to detect skip of SW\n            },\n            { // alt-step 3\n              "name":"reject flash if new SW is older",\n              "filter":// filter to detect rejection...\n            }\n          ]\n      }\n    ],\n    "failures:{} // ommitted here\n    },\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"context",children:"context"}),"\n",(0,i.jsxs)(n.p,{children:["Any filter payload regex can capture ",(0,i.jsx)(n.code,{children:"context"})," via capture group names."]}),"\n",(0,i.jsx)(n.p,{children:"This will be added as info to the report details."}),"\n",(0,i.jsx)(n.p,{children:"This can e.g. be used to capture file names transferred or similar dynamic data."}),"\n",(0,i.jsx)(n.p,{children:"Context values collected are stored as per detected sequence in a key/value storage.\nThe capture group name is used as the key of the key/value storage.\nIf multiple values are capture with the same name only the last value is stored."}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Capture group names starting with '_' are treated in a special way:"}),(0,i.jsx)(n.p,{children:"If they are captured multiple times they need to match the first captured value otherwise the sequence is aborted with an error."})]}),"\n",(0,i.jsx)(n.p,{children:"TODO add examples showing how this can be used to enfores that e.g. returned handles are the same for a request."}),"\n",(0,i.jsx)(n.h2,{id:"rest-query-sequence-return-values",children:"REST query sequence return values"}),"\n",(0,i.jsxs)(n.p,{children:["todo describe ",(0,i.jsx)(n.code,{children:"seqSummary"})]}),"\n",(0,i.jsx)(n.h2,{id:"using-sequences",children:"Using sequences"}),"\n",(0,i.jsxs)(n.p,{children:["The intended way to use sequences with fishbones is to define them as part of the upper or lower badge for a root cause.\nAs soon as the root cause is visible the sequence detection will be executed automatically and the summary shown as part of the ",(0,i.jsx)(n.a,{href:"/docs/badges",children:"badge"})]}),"\n",(0,i.jsx)(n.p,{children:"To do so use a badge with"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"extension dlt-logs rest query"}),"\n",(0,i.jsxs)(n.li,{children:["edit the sequence manually or via ",(0,i.jsx)(n.code,{children:"EDIT IN NOTEBOOK"})]}),"\n",(0,i.jsxs)(n.li,{children:["use json path: ",(0,i.jsx)(n.code,{children:"$.data[*]"})]}),"\n",(0,i.jsx)(n.li,{children:"use javascript function:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const summaries=result.filter((t)=>t.type==='seqSummary').map((d)=>d.attributes)\nreturn ''+summaries.map((s)=>`${s.name}:${s.summary}`).join(',')\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will show the sequence execution summaries as part of the badge label."}),"\n",(0,i.jsx)(n.h3,{id:"full-report-via-dlt-logs-extension",children:"full report via dlt-logs extension"}),"\n",(0,i.jsxs)(n.p,{children:["The full report for a sequence execution is available in the tree-view under ",(0,i.jsx)(n.code,{children:"Events"}),"/",(0,i.jsx)(n.code,{children:"Sequences"}),"/name and can be browsed there or exported in markdown format."]}),"\n",(0,i.jsx)(n.p,{children:"TODO: picture or link to dlt-logs docs."}),"\n",(0,i.jsx)(n.h3,{id:"full-report-via-fba-cli-tool",children:"full report via fba-cli tool"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"fba-cli"})," tool executes the full fishbone including the sequences and will contain a report in markdown format for the sequence."]}),"\n",(0,i.jsx)(n.p,{children:"TODO: ... more details, links, examples"}),"\n",(0,i.jsx)(n.h2,{id:"testing-sequence-definitions",children:"Testing sequence definitions"}),"\n",(0,i.jsx)(n.p,{children:"It's easiest to test the definition of the sequence and the execution by opening it in the fishbone/edit badges/notebooks. There you can execute it in real time."}),"\n",(0,i.jsx)(n.p,{children:"TODO ... add example picture."}),"\n",(0,i.jsx)(n.h2,{id:"faqs",children:"FAQs"}),"\n",(0,i.jsx)(l,{toc:u.filter((e=>4===e.level&&e.id.startsWith("q-"))),minHeadingLevel:4,maxHeadingLevel:4}),"\n",(0,i.jsxs)(n.h4,{id:"q-what-does-error-step-out-of-order-mean",children:["Q: What does ",(0,i.jsx)(n.code,{children:"ERROR: Step out of order"})," mean?"]}),"\n",(0,i.jsx)(n.p,{children:"A: It indicates that a next/later step occurs before current/next step."}),"\n",(0,i.jsxs)(n.p,{children:["E.g. in a sequence with 3 steps: s1, s2, s3",(0,i.jsx)(n.br,{}),"\n","and message matching: s1, s3, s2, s3"]}),"\n",(0,i.jsx)(n.p,{children:"The sequence occurrence started with s1, s3 will throw that error on processing s2 as step 2 came in after step 3."}),"\n",(0,i.jsx)(n.p,{children:"This can be resolved in multiple ways:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'"ignoreOutOfOrder": true'}),"\n",(0,i.jsxs)(n.p,{children:["If you define s3 with ",(0,i.jsx)(n.code,{children:"ignoreOutOfOrder:true"})," and occurrences of this step that are not in order are ignored. E.g. the sequence s1, s3, s2, s3 is matched as: s1, (s3 ignored), s2, s3 (now in order)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"usage of a parallel step"}),"\n",(0,i.jsx)(n.p,{children:"E.g. if step 2 and step 3 are not logically sorted / can happen in any order you can use a parallel step with those:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsonc",children:'{\n  name: "e.g. step 2 and step 3 in any order",\n  par:[\n    { // step 2 definition\n    },\n    {\n      // step 3 definition\n    }\n  ]\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"q-how-to-ensure-that-a-step-does-not-create-a-new-sequence-occurrence",children:"Q: How to ensure that a step does not create a new sequence occurrence?"}),"\n",(0,i.jsx)(n.p,{children:"A: By default every step within a sequence can create a new occurrence."}),"\n",(0,i.jsxs)(n.p,{children:["E.g. in a sequence with 3 steps: s1, s2 and s3",(0,i.jsx)(n.br,{}),"\n","and messages matching: s2 and s3"]}),"\n",(0,i.jsx)(n.p,{children:"Step 2 will create a new occurrence of the sequence (that can never become 'ok' as the first step is missing).\nThis is on purpose as there are often logs that miss the start of the sequence."}),"\n",(0,i.jsxs)(n.p,{children:["If you want to avoid that you can use  ",(0,i.jsx)(n.code,{children:'"canCreateNew":false'})," in the step definition for all steps except the first one."]}),"\n",(0,i.jsx)(n.h4,{id:"q-how-to-escape-chars-in-regex",children:"Q: How to escape chars in regex?"}),"\n",(0,i.jsxs)(n.p,{children:["A: Whenever you do use strings in a json definition like the ",(0,i.jsx)(n.code,{children:"payloadRegex"})," you do need to escape all json special characters ",(0,i.jsx)(n.code,{children:'", \\, /'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["E.g. ",(0,i.jsx)(n.code,{children:"\\d"})," needs to be written as ",(0,i.jsx)(n.code,{children:"\\\\d"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["For more complex examples or if in doubt e.g. the ",(0,i.jsx)(n.a,{href:"https://www.lambdatest.com/free-online-tools/json-escape",children:"online json escape"})," helps."]}),"\n",(0,i.jsxs)(n.h4,{id:"q-what-does-stepx-exceeded-max-cardinality-1-mean",children:["Q: What does ",(0,i.jsx)(n.code,{children:"step#x exceeded max cardinality 1"})," mean?"]}),"\n",(0,i.jsx)(n.p,{children:'A: By default each step within a sequence has a "cardinality" of 1. This means it needs to be exactly once within an occurrence of the sequence.'}),"\n",(0,i.jsxs)(n.p,{children:["E.g. in a sequence with 3 steps: s1, s2 and s3",(0,i.jsx)(n.br,{}),"\n","and messages matching: s1, s2, s2 and s3"]}),"\n",(0,i.jsx)(n.p,{children:"you will get that error for step 2 as it occurs twice but is expected exactly once."}),"\n",(0,i.jsxs)(n.p,{children:["By setting ",(0,i.jsx)(n.code,{children:"card"})," for step 2 to e.g. ",(0,i.jsx)(n.code,{children:'"card":"+"'})," (>=1 times) or ",(0,i.jsx)(n.code,{children:'"card":"*"'})," (>=0 times) the step can be allowed to occur multiple times at that position (after step 1 and before step 3)."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}},1021:(e,n,s)=>{s.d(n,{A:()=>x});var t=s(6540),i=s(3115);function r(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),s=Array(7).fill(-1);n.forEach(((e,n)=>{const t=s.slice(2,e.level);e.parentIndex=Math.max(...t),s[e.level]=n}));const t=[];return n.forEach((e=>{const{parentIndex:s,...i}=e;s>=0?n[s].children.push(i):t.push(i)})),t}function a(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:t}=e;return n.flatMap((e=>{const n=a({toc:e.children,minHeadingLevel:s,maxHeadingLevel:t});return function(e){return e.level>=s&&e.level<=t}(e)?[{...e,children:n}]:n}))}function d(e){const n=e.getBoundingClientRect();return n.top===n.bottom?d(e.parentNode):n}function l(e,n){let{anchorTopOffset:s}=n;const t=e.find((e=>d(e).top>=s));if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(d(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function c(){const e=(0,t.useRef)(0),{navbar:{hideOnScroll:n}}=(0,i.p)();return(0,t.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function o(e){const n=(0,t.useRef)(void 0),s=c();(0,t.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:t,linkActiveClassName:i,minHeadingLevel:r,maxHeadingLevel:a}=e;function d(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(t),d=function(e){let{minHeadingLevel:n,maxHeadingLevel:s}=e;const t=[];for(let i=n;i<=s;i+=1)t.push(`h${i}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:r,maxHeadingLevel:a}),c=l(d,{anchorTopOffset:s.current}),o=e.find((e=>c&&c.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,s){s?(n.current&&n.current!==e&&n.current.classList.remove(i),e.classList.add(i),n.current=e):e.classList.remove(i)}(e,e===o)}))}return document.addEventListener("scroll",d),document.addEventListener("resize",d),d(),()=>{document.removeEventListener("scroll",d),document.removeEventListener("resize",d)}}),[e,s])}var h=s(6289),u=s(4848);function f(e){let{toc:n,className:s,linkClassName:t,isChild:i}=e;return n.length?(0,u.jsx)("ul",{className:i?void 0:s,children:n.map((e=>(0,u.jsxs)("li",{children:[(0,u.jsx)(h.A,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,u.jsx)(f,{isChild:!0,toc:e.children,className:s,linkClassName:t})]},e.id)))}):null}const p=t.memo(f);function x(e){let{toc:n,className:s="table-of-contents table-of-contents__left-border",linkClassName:d="table-of-contents__link",linkActiveClassName:l,minHeadingLevel:c,maxHeadingLevel:h,...f}=e;const x=(0,i.p)(),j=c??x.tableOfContents.minHeadingLevel,m=h??x.tableOfContents.maxHeadingLevel,g=function(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:i}=e;return(0,t.useMemo)((()=>a({toc:r(n),minHeadingLevel:s,maxHeadingLevel:i})),[n,s,i])}({toc:n,minHeadingLevel:j,maxHeadingLevel:m});return o((0,t.useMemo)((()=>{if(d&&l)return{linkClassName:d,linkActiveClassName:l,minHeadingLevel:j,maxHeadingLevel:m}}),[d,l,j,m])),(0,u.jsx)(p,{toc:g,className:s,linkClassName:d,...f})}}}]);