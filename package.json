{
  "name": "fishbone",
  "displayName": "Fishbone / Ishikawa analysis",
  "description": "Create interactive fishbone diagrams for a systematic defect/failure analysis.",
  "version": "1.38.5",
  "license": "CC-BY-NC-SA-4.0",
  "publisher": "mbehr1",
  "author": {
    "name": "Matthias Behr",
    "email": "mbehr+fishbone@mcbehr.de"
  },
  "icon": "fishbone-icon2.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/mbehr1/fishbone.git"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/mbehr1"
  },
  "bugs": {
    "url": "https://github.com/mbehr1/fishbone/issues"
  },
  "homepage": "https://mbehr1.github.io/fishbone/",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Visualization",
    "Data Science",
    "Other"
  ],
  "keywords": [
    "defect",
    "analysis",
    "Ishikawa"
  ],
  "activationEvents": [
    "onView:fishbone_explorer.fba",
    "onNotebook:fba-nb"
  ],
  "capabilities": {
    "virtualWorkspaces": true,
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "main": "./out/extension/extension.js",
  "contributes": {
    "chatParticipants": [
      {
        "id": "fishbone.ai",
        "name": "fai",
        "fullName": "Fishbone Analyst",
        "description": "Which analysis shall I help you with?",
        "isSticky": true,
        "commands": [
          {
            "name": "teach",
            "description": "Provide help on how to use a fishbone"
          },
          {
            "name": "analyse",
            "description": "Perform fishbone analysis on a trace file"
          },
          {
            "name": "list",
            "description": "List all registered tools"
          }
        ],
        "disambiguation": [
          {
            "category": "analysis",
            "description": "The user wants to analyse logs or traces",
            "examples": [
              "Explain to me the scenarios in the trace",
              "Perform a fishbone analysis on the dlt log"
            ]
          }
        ]
      }
    ],
    "languageModelTools": [
      {
        "name": "fishbone_rootcauseDetails",
        "tags": [
          "fishbone"
        ],
        "toolReferenceName": "rootcauseDetails",
        "displayName": "Fishbone Root Cause Details",
        "modelDescription": "Details of a root cause in a fishbone.",
        "userDescription": "Provide details for a root cause in a fishbone",
        "canBeReferencedInPrompt": true,
        "icon": "$(files)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "fbUid": {
              "type": "string",
              "description": "The uid of the root cause to provide details for. It needs to be exactly the fbUid without any additional characters pre- or appended."
            }
          },
          "required": [
            "fbUid"
          ]
        }
      },
      {
        "name": "fishbone_queryLogs",
        "tags": [
          "fishbone"
        ],
        "toolReferenceName": "queryLogs",
        "displayName": "Query logs with filters",
        "modelDescription": "Query matching dlt-logs with a set of filters. Returns all logs matching the provided filters.",
        "userDescription": "Provide logs matching a set of filters",
        "canBeReferencedInPrompt": true,
        "icon": "$(list-filter)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "filters": {
              "type": "array",
              "minItems": 1,
              "description": "List of filters to apply. If no positive filter is provided all logs are shown that are not filtered out by negative filters. If any positive filter is provided only logs passing: any (or) of the positive filters and are not filtered out by any of the negative filters.",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "number",
                    "description": "The type of the filter (0 = pos, 1 = negative)."
                  },
                  "ecu": {
                    "type": "string",
                    "description": "Optional ecu to filter for."
                  },
                  "apid": {
                    "type": "string",
                    "description": "Optional apid (application id) to filter for."
                  },
                  "ctid": {
                    "type": "string",
                    "description": "Optional ctid (context id) to filter for."
                  },
                  "payloadRegex": {
                    "type": "string",
                    "description": "Optional regular expression to filter the payload of the log for."
                  },
                  "ignoreCasePayload": {
                    "type": "boolean",
                    "description": "Optional flag to ignore case for the payload regex. If not set any payload search is case sensitive."
                  },
                  "logLevelMin": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 6,
                    "description": "Optional minimum log level to filter for. The following log-levels are defined: FATAL=1, ERROR=2, WARNING=3, INFO=4, DEBUG=5, VERBOSE=6."
                  },
                  "logLevelMax": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 6,
                    "description": "Optional maximum log level to filter for. E.g. to add all messages with warnings, error or fatal messages use a positive filter with logLevelMax = 3."
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          },
          "required": [
            "filters"
          ]
        }
      }
    ],
    "commands": [
      {
        "command": "fishbone.addNewFile",
        "title": "New fishbone"
      }
    ],
    "notebooks": [
      {
        "type": "fba-nb",
        "displayName": "Fishbone Notebook",
        "selector": [
          {
            "filenamePattern": "*.fba-nb"
          }
        ]
      }
    ],
    "customEditors": [
      {
        "viewType": "fishbone.fba",
        "displayName": "Fishbone Analysis",
        "selector": [
          {
            "filenamePattern": "*.fba"
          }
        ]
      }
    ],
    "views": {
      "mbehr1Logs": [
        {
          "type": "tree",
          "id": "fishbone_tree.fba",
          "name": "Fishbone",
          "icon": "fishbone-icon2.png"
        }
      ]
    },
    "languages": [
      {
        "id": "fbJsonPath",
        "aliases": [
          "JSONPath"
        ],
        "configuration": "./fbJsonPath_language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "fbJsonPath",
        "scopeName": "source.jsonpath",
        "path": "./fbJsonPath.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "prepare": "husky",
    "compile": "npm run check-types && node esbuild.mjs && npm run build:webview",
    "check-types": "tsc --noEmit",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.mjs --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "vscode:prepublish": "yarn run package",
    "package": "npm run check-types && node esbuild.mjs --production && npm run build:webview",
    "build:webview": "yarn --cwd ./src/webview build",
    "lint": "eslint src --ext ts",
    "nawatch:webview": "yarn --cwd ./src/webview watch",
    "pretest": "yarn run compile && yarn run lint",
    "test": "tsc --project tsconfig_test.json && node ./out/test/test/runTest.js"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/js-yaml": "^4.0.9",
    "@types/json5": "2.2.0",
    "@types/jsonpath": "0.2.4",
    "@types/mocha": "^9.1.1",
    "@types/node": "^22.16.5",
    "@types/request": "^2.48.12",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^6.7.3",
    "@typescript-eslint/parser": "^6.7.3",
    "esbuild": "^0.25.8",
    "eslint": "^8.50.0",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "mocha": "^10.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.1.1",
    "semantic-release": "^24.2.7",
    "semantic-release-vsce": "^6.0.11",
    "typescript": "~5.7.2",
    "@vscode/vsce": "^3.6.0",
    "vscode-test": "^1.6.1"
  },
  "resolutions": {
    "conventional-changelog-conventionalcommits": ">= 8.0.0"
  },
  "dependencies": {
    "@vscode/extension-telemetry": "^1.0.0",
    "@vscode/prompt-tsx": "^0.3.0-alpha.24",
    "dlt-logs-utils": "0.13.4",
    "gray-matter": "^4.0.3",
    "jju": "github:mbehr1/jju#3aa4169df926e99083fdd511d7c20b5bd9ba789f",
    "js-yaml": "^4.1.0",
    "json5": "2.2.3",
    "jsonpath": "^1.1.1",
    "mdast-util-assert": "^5.0.0",
    "mdast-util-gfm-table": "^2.0.0",
    "mdast-util-to-markdown": "^2.1.2",
    "request": "^2.88.2",
    "safe-stable-stringify": "^2.5.0",
    "short-unique-id": "4.4.4",
    "tslib": "2.6.2",
    "zod": "4.0.17"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "release": {
    "branches": [
      "main"
    ],
    "plugins": [
      [
        "@semantic-release/commit-analyzer",
        {
          "releaseRules": [
            {
              "type": "docs",
              "scope": "readme",
              "release": "patch"
            }
          ]
        }
      ],
      [
        "@semantic-release/release-notes-generator",
        {
          "preset": "conventionalcommits",
          "presetConfig": {
            "types": [
              {
                "type": "feat",
                "section": "Features"
              },
              {
                "type": "fix",
                "section": "Bug Fixes"
              },
              {
                "type": "chore",
                "hidden": true
              },
              {
                "type": "docs",
                "hidden": true
              },
              {
                "type": "style",
                "section": "Other",
                "hidden": false
              },
              {
                "type": "test",
                "hidden": true
              },
              {
                "type": "perf",
                "section": "Performance",
                "hidden": false
              },
              {
                "type": "refactor",
                "section": "Other",
                "hidden": false
              }
            ]
          }
        }
      ],
      [
        "@semantic-release/changelog",
        {
          "changelogFile": "CHANGELOG.md",
          "changelogTitle": "# Change log for 'Fishbone' ([documentation](https://mbehr1.github.io/fishbone)):"
        }
      ],
      [
        "@semantic-release/npm",
        {
          "npmPublish": false
        }
      ],
      [
        "semantic-release-vsce",
        {
          "packageVsix": "fishbone.vsix"
        }
      ],
      [
        "@semantic-release/github",
        {
          "assets": [
            {
              "path": "fishbone.vsix",
              "label": "Fishbone Visual Studio Code extension package"
            }
          ],
          "successComment": false,
          "failTitle": false
        }
      ],
      [
        "@semantic-release/git",
        {
          "message": "chore(release): ${nextRelease.version} [skip ci]"
        }
      ]
    ],
    "preset": "conventionalcommits"
  },
  "packageManager": "yarn@1.22.19+sha1.4ba7fc5c6e704fce2066ecbfb0b0d8976fe62447"
}
